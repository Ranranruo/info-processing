/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.84
 * Generated at: 2025-04-24 07:32:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.DriverManager;

public final class selectDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Class.forName("oracle.jdbc.OracleDriver");
	String no = request.getParameter("no");
	Connection con = DriverManager.getConnection("jdbc:oracle:thin:@//localhost:1521/xe", "system", "1234");
	
	String sql = "SELECT j.pname, j.jumin, CASE WHEN substr(j.jumin, 8, 1) = '1' THEN '남' WHEN substr(j.jumin, 8, 1) = '2' THEN '여' end, j.tel, substr(v.resvdate, 1, 4) || '년' || substr(v.resvdate, 5, 2) || '월' || substr(v.resvdate, 7, 2) || '일', substr(v.resvtime, 1, 2) || ':' || substr(v.resvtime, 3, 2), h.hospname, h.hosptel, h.hospaddr, CASE WHEN substr(v.vcode, 4, 1) = '1' THEN 'A백신' WHEN substr(v.vcode, 4, 1) = '2' THEN 'B백신' WHEN substr(v.vcode, 4, 1) = '3' THEN 'C백신' END FROM tbl_vaccresv_202108 v, tbl_hosp_202108 h, tbl_jumin_201808 j WHERE v.jumin = j.jumin AND v.hospcode = h.hospcode AND v.resvno = ?";
	PreparedStatement s = con.prepareStatement(sql);
	s.setString(1, no);
	
	ResultSet rs = s.executeQuery();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("* {padding:0; margin: 0; text-decoration: none; color: inherit;}\r\n");
      out.write(".c { display: flex; justify-content: center; align-items: center;}\r\n");
      out.write("td{ border: 1px solid black; padding: .5em 1em;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header class=\"c\" style=\"background-color: gray; color: #000; font-weight: bold; font-size: 50px; height: 100px;\">(과정평가형 정보처리산업기사) 백신접종예약 프로그램 ver 2021-08</header>\r\n");
      out.write("<nav style=\"display: flex; padding: 10px; gap: 20px; background: #aaa; color: black; font-weight: bold; height:30px;\">\r\n");
      out.write("<a href=\"insert.jsp\">백신접종예약</a>\r\n");
      out.write("<a href=\"select.jsp\">접종예약조회</a>\r\n");
      out.write("<a href=\"view.jsp\">접종인원통계</a>\r\n");
      out.write("<a href=\"index.jsp\">홈으로</a>\r\n");
      out.write("</nav>\r\n");
      out.write("<section style=\"min-height: calc(100vh - 200px); display: flex; flex-direction: column; align-items: center;\">\r\n");
      out.write("<form action=\"select.jsp\" style=\"display: flex; flex-direction: column; align-items: center;\">\r\n");

 if(rs.next()) {

      out.write("\r\n");
      out.write("<h1 class=\"c\" style=\"padding: 50px;\">예약번호: ");
      out.print(no );
      out.write(" 의 접종예약조회</h1>\r\n");
      out.write("\r\n");
      out.write("<table>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>이름</td>\r\n");
      out.write("<td>주민번호</td>\r\n");
      out.write("<td>성별</td>\r\n");
      out.write("<td>전화번호</td>\r\n");
      out.write("<td>예약일자</td>\r\n");
      out.write("<td>예약시간</td>\r\n");
      out.write("<td>병원명</td>\r\n");
      out.write("<td>대표전화</td>\r\n");
      out.write("<td>병원주소</td>\r\n");
      out.write("<td>백신종류</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>");
      out.print(rs.getString(1) );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rs.getString(2) );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rs.getString(3) );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rs.getString(4) );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rs.getString(5) );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rs.getString(6) );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rs.getString(7) );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rs.getString(8) );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rs.getString(9) );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rs.getString(10) );
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<button>돌아가기</button>\r\n");
 } else { 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h1 class=\"c\" style=\"font-size: 80px; padding: 50px;\">접종예약정보가 존재하지 않습니다!</h1>\r\n");
      out.write("<button>돌아가기</button>\r\n");
      out.write("</form>\r\n");
 } 
      out.write("\r\n");
      out.write("</section>\r\n");
      out.write("<footer class=\"c\" style=\"background-color: black; color: #fff; font-weight: bold; font-size: 30px; height: 50px;\">HRDKIREA Copyright @ 2021 All rights reserved. Human Resources Development Service of Korea</footer>\r\n");
      out.write("<script>\r\n");
      out.write("const $ = (s) => document.querySelector(s);\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
